// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockMarket.Domain.Context;

namespace StockMarket.Domain.Migrations
{
    [DbContext(typeof(StockMarketContext))]
    [Migration("20230531131714_ChangeLogRelationship")]
    partial class ChangeLogRelationship
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockMarket.Domain.Entities.Entreprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Entreprise");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.RequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RequestLog");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.RequestLogTicker", b =>
                {
                    b.Property<int>("RequestLogId")
                        .HasColumnType("int");

                    b.Property<int>("TickerId")
                        .HasColumnType("int");

                    b.HasKey("RequestLogId", "TickerId");

                    b.HasIndex("TickerId");

                    b.ToTable("RequestLogTicker");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.Ticker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntrepriseId")
                        .HasColumnType("int");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReferenceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntrepriseId");

                    b.ToTable("Ticker");

                    b.HasDiscriminator<string>("Type").HasValue("Ticker");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.HistoricalTicker", b =>
                {
                    b.HasBaseType("StockMarket.Domain.Entities.Ticker");

                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Historical");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.RealTimeTicker", b =>
                {
                    b.HasBaseType("StockMarket.Domain.Entities.Ticker");

                    b.Property<decimal>("Current")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("RealTime");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.RequestLog", b =>
                {
                    b.HasOne("StockMarket.Domain.Entities.User", "User")
                        .WithMany("RequestLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.RequestLogTicker", b =>
                {
                    b.HasOne("StockMarket.Domain.Entities.RequestLog", "RequestLog")
                        .WithMany("RequestLogTickers")
                        .HasForeignKey("RequestLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockMarket.Domain.Entities.Ticker", "Ticker")
                        .WithMany("RequestLogTickers")
                        .HasForeignKey("TickerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestLog");

                    b.Navigation("Ticker");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.Ticker", b =>
                {
                    b.HasOne("StockMarket.Domain.Entities.Entreprise", "Entreprise")
                        .WithMany("Tickers")
                        .HasForeignKey("EntrepriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.Entreprise", b =>
                {
                    b.Navigation("Tickers");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.RequestLog", b =>
                {
                    b.Navigation("RequestLogTickers");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.Ticker", b =>
                {
                    b.Navigation("RequestLogTickers");
                });

            modelBuilder.Entity("StockMarket.Domain.Entities.User", b =>
                {
                    b.Navigation("RequestLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
